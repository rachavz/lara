<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutocompleteNullProvider" xml:space="preserve">
    <value>The Provider propery cannot be null.</value>
  </data>
  <data name="AutocompleteOrphan" xml:space="preserve">
    <value>Autocomplete requieres an input element that is already connected to a document.</value>
  </data>
  <data name="BadRequest" xml:space="preserve">
    <value>Bad request</value>
  </data>
  <data name="BindingCycleDetected" xml:space="preserve">
    <value>Cycle detected: modification handlers should not modify the source data.</value>
  </data>
  <data name="BrowserAppConnectionRejected" xml:space="preserve">
    <value>Lara applications running in BrowserApp mode are secured to allow only 1 connection.</value>
  </data>
  <data name="CannotAddInsideItself" xml:space="preserve">
    <value>Cannot add an element inside itself.</value>
  </data>
  <data name="CannotRemoveNoParent" xml:space="preserve">
    <value>Cannot remove from parent, the node has no parent element.</value>
  </data>
  <data name="DashRequired" xml:space="preserve">
    <value>Invalid tag name. It needs to have a '-' and cannot have spaces.</value>
  </data>
  <data name="EventNameNull" xml:space="preserve">
    <value>The 'EventName' property cannot be null or empty.</value>
  </data>
  <data name="FlushNotAvailable" xml:space="preserve">
    <value>The FlushPartialChanges() method is available only for events declared with the option LongRunnning = true.</value>
  </data>
  <data name="FocusDisconnected" xml:space="preserve">
    <value>To use the focus() method, first add the element to a document.</value>
  </data>
  <data name="Http403" xml:space="preserve">
    <value>HTTP 403: Forbidden.</value>
  </data>
  <data name="InputElementNull" xml:space="preserve">
    <value>Input element cannot be null.</value>
  </data>
  <data name="InvalidBindingExpression" xml:space="preserve">
    <value>Invalid expression for binding. Expecting a property setter.</value>
  </data>
  <data name="InvalidTagName" xml:space="preserve">
    <value>Invalid tag name.</value>
  </data>
  <data name="MustInherit" xml:space="preserve">
    <value>Component types must inherit from the Component class.</value>
  </data>
  <data name="NoCurrentContext" xml:space="preserve">
    <value>LaraUI.Context not available</value>
  </data>
  <data name="NoCurrentDocument" xml:space="preserve">
    <value>There is no current document.</value>
  </data>
  <data name="NoCurrentPage" xml:space="preserve">
    <value>No page context available.</value>
  </data>
  <data name="NoCurrentService" xml:space="preserve">
    <value>No service context available.</value>
  </data>
  <data name="NoCurrentSession" xml:space="preserve">
    <value>There is no current session.</value>
  </data>
  <data name="NodeNotFoundInsideParent" xml:space="preserve">
    <value>Invalid child/parent nodes specified.</value>
  </data>
  <data name="ReferenceNodeNotFound" xml:space="preserve">
    <value>Reference before/after node not found.</value>
  </data>
  <data name="ServerErrorMessage" xml:space="preserve">
    <value>The server encountered an internal error or misconfiguration and was unable to complete your request.</value>
  </data>
  <data name="ServerEventAlreadyDisposed" xml:space="preserve">
    <value>ServerEvent already disposed.</value>
  </data>
  <data name="ServerEventsNotEnabled" xml:space="preserve">
    <value>Server events are not enabled. Call ServerEventsOn() in order to use ServerEventFlush().</value>
  </data>
  <data name="SlotOnlyParent" xml:space="preserve">
    <value>The 'slot' attribute can only be modified on elements not yet attached to a parent.</value>
  </data>
  <data name="SpecifyAddressService" xml:space="preserve">
    <value>Please specify the address for the web service.</value>
  </data>
  <data name="SpecifyMethodService" xml:space="preserve">
    <value>Please specify the method for the web service (e.g. 'POST').</value>
  </data>
  <data name="TagNameSpaces" xml:space="preserve">
    <value>Element tag names cannot contain spaces.</value>
  </data>
  <data name="TooManyPops" xml:space="preserve">
    <value>Too many Pop() calls.</value>
  </data>
  <data name="ResourceNotFound" xml:space="preserve">
    <value>Resource not found</value>
  </data>
</root>